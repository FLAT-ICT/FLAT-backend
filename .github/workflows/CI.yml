name: CI

on:
  push:
    branches:
      - feature/workflow_setting
  pull_request:
    branches:
      - develop
      - main

jobs:
  test:
    #TODO Input 待ちが発生してしまう
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: compose tests
        shell: bash
        env: 
          SSH_KEY: ${{ secrets.PAT }}
          SSH_KEY_PATH: ./secret.txt
        run: | 
          echo ${{ env.SSH_KEY }} > ./secret.txt
          docker-compose -f docker-compose.yml -f docker-compose.test.yaml build flat_backend
          docker-compose -f docker-compose.yml -f docker-compose.test.yaml run flat-backend

# name: CI

# on:
#   push:
#     branches:
#       - feature/workflow_setting
#   pull_request:
#     branches:
#       - develop
#       - main

# jobs:
#   check:
#     # Run `cargo check` first to ensure that the pushed code at least compiles.
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - uses: actions-rs/toolchain@v1
#         with:
#           toolchain: stable
#           override: true
#           profile: minimal
#           components: clippy
#       - uses: Swatinem/rust-cache@v1
#       - name: Check
#         uses: actions-rs/cargo@v1
#         with:
#           command: clippy
#           args: --all --all-targets --all-features
#       # - name: rustfmt
#       #   uses: actions-rs/cargo@v1
#       #   with:
#       #     command: fmt
#       #     args: --all -- --check

#   #TODO dieselをインストールする
#   #TODO SQL起動する

#   test:
#     #TODO DATABASE_URL を渡す
#     needs: check
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@master
#     - uses: actions-rs/toolchain@v1
#       with:
#         toolchain: stable
#         override: true
#         profile: minimal
#     - uses: Swatinem/rust-cache@v1
#     # - name: Run tests
#     #   uses: actions-rs/cargo@v1
#     #   with:
#     #     command: test
#     - name: compose tests
#       shell: bash
#       run: | 
#         docker-compose up --build flat-backend-test 